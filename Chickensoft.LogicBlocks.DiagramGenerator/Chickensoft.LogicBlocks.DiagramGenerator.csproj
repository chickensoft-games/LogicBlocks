<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- Source generators must target netstandard 2.0 -->
    <TargetFramework>netstandard2.0</TargetFramework>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <LangVersion>preview</LangVersion>
    <RootNamespace>Chickensoft.LogicBlocks.DiagramGenerator</RootNamespace>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <NoWarn>NU5128</NoWarn>
    <OutputPath>./nupkg</OutputPath>
    <IsRoslynComponent>true</IsRoslynComponent>
    <AnalyzerLanguage>cs</AnalyzerLanguage>
    <DebugType>portable</DebugType>

    <Title>LogicBlocks Generator</Title>
    <Version>4.2.2</Version>
    <Description>See what your hierarchical state machine code looks like as a diagram!</Description>
    <Copyright>Â© 2024 Chickensoft Games</Copyright>
    <Authors>Chickensoft</Authors>
    <Company>Chickensoft</Company>

    <PackageId>Chickensoft.LogicBlocks.DiagramGenerator</PackageId>
    <PackageReleaseNotes>LogicBlocks Diagram Generator release.</PackageReleaseNotes>
    <PackageIcon>icon.png</PackageIcon>
    <PackageTags>State management;state machine;Godot;CSharp;C#;Chickensoft;Gamedev;Utility;Utilities;Source Generator;Generator;Godot 4;</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/chickensoft-games/LogicBlocks</PackageProjectUrl>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>git@github.com:chickensoft-games/LogicBlocks.git</RepositoryUrl>

  </PropertyGroup>

  <ItemGroup>
    <!-- Has to be in its own item group -->
    <None Include="../README.md" Pack="true" PackagePath="\" />
    <None Include="../LICENSE" Pack="true" PackagePath="\" />
    <None Include="../Chickensoft.LogicBlocks/icon.png" Pack="true" PackagePath="" />
  </ItemGroup>

  <!-- The following libraries include the source generator interfaces and types we need -->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.4.0" PrivateAssets="all" />
    <PackageReference Include="IsExternalInit" Version="1.0.3" PrivateAssets="all">
    </PackageReference>
  </ItemGroup>

  <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true"
      PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>
</Project>
