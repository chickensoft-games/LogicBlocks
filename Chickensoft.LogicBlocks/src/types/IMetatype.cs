namespace Chickensoft.LogicBlocks;

using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization.Metadata;
using Chickensoft.LogicBlocks.Types;

/// <summary>
/// Represents a metatype — a type that helps describe another type.
/// </summary>
public interface IMetatype {
  /// <summary>
  /// Create the JsonTypeInfo needed by System.Text.Json for this metatype.
  /// </summary>
  /// <param name="registry">Type registry generated by the LogicBlocks
  /// generator.</param>
  /// <param name="options">Json serializer options.</param>
  JsonTypeInfo CreateJsonTypeInfo(
    ITypeRegistry registry, JsonSerializerOptions options
  );

  /// <summary>
  /// Properties on the type. Only non-partial properties marked with
  /// attributes are included.
  /// </summary>
  IList<LogicProp> Properties { get; }
}

/// <summary>
/// Interface applied to a type to indicate that it has metatype information
/// available.
/// </summary>
public interface IHasMetatype { }
